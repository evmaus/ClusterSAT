syntax = "proto3";

import "src/clustersat/protocol/cnf.proto";

package clustersat;

// A SAT Service takes a SATRequest, assigns it an ID, and then asynchronously
// calculates satisfiability.
service SATService {
  rpc CheckSatisfiability (SatRequest) returns (SatResponse);
  rpc GetSatisfiabilityResult (SatIdRequest) returns (SatResponse);
  rpc GetCurrentSatResults (CurrentSatResultsRequest) returns (CurrentSatResultsResponse);
//  rpc CancelSatRequest(SatIdRequest) returns (SatResponse);
}

message SatRequestIdentifier {
  int64 id = 1;
}

message SatIdRequest {
  SatRequestIdentifier id = 1;
}

message CurrentSatResultsRequest {
  repeated SatRequestIdentifier request = 1;
}

message CurrentSatResultsResponse {
  repeated SatResult results = 1;
}

message SatQuery {
  AndTerm term = 1;
}

message SatRequest {
  SatRequestIdentifier id = 1;
  SatQuery query = 2;
}

message SatResult {
  enum Result {
    SAT = 0;
    UNSAT = 1;
    UNKNOWN = 2;
    IN_PROGRESS = 3;
    CANCELLED = 4;
  }
  SatRequestIdentifier id = 1;
  Result result = 2;
  repeated Variable assignments = 3;
}

message SatResponse {
  SatResult result = 1;
}